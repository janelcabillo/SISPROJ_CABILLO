using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using Microsoft.Data.SqlClient;

namespace SIS_CABILLO.FORMS
{
    public partial class TeacherUC : UserControl
    {
        private bool isUpdateMode = false;
        private int selectedTeacherId = -1;
        public TeacherUC()
        {
            InitializeComponent();
        }
        private void LoadTeachers()
        {
            using (SqlConnection conn = new SqlConnection(DatabaseConnection.connectionString))
            {
                string query = "SELECT * From Teacher Order by teacher_id desc";

                SqlDataAdapter adapter = new SqlDataAdapter(query, conn);
                DataTable dt = new DataTable();
                adapter.Fill(dt);

                dgvTeacher.DataSource = dt;
            }
        }
        private void ClearFields()
        {
            txtFirstName.Clear();
            txtLastName.Clear();
            txtEmail.Clear();
            txtPhone.Clear();
            txtDepartment.Clear();
            txtSpecialization.Clear();
            cmbStatus.SelectedIndex = -1;
            dtpHireDate.Value = DateTime.Today;
        }

        private void TeacherUC_Load(object sender, EventArgs e)
        {
            LoadTeachers();
        }

        private void btnAddNew_Click(object sender, EventArgs e)
        {
            if (!panelAddTeacher.Visible)
            {
                panelAddTeacher.Visible = true;
                panelAddTeacher.BringToFront();
            }
        }

        private void btnSave_Click(object sender, EventArgs e)
        {
            using (SqlConnection connection = new SqlConnection(DatabaseConnection.connectionString))
            {
                connection.Open();

                if (isUpdateMode && selectedTeacherId > 0)
                {
                    // UPDATE existing teacher
                    string updateQuery = @"UPDATE teacher SET  
                        first_name = @first_name,
                        last_name = @last_name,
                        email = @email,
                        phone = @phone,
                        hire_date = @hire_date,
                        department = @department,
                        specialization = @specialization,
                        status = @status
                       WHERE teacher_id = @id";

                    using (SqlCommand cmd = new SqlCommand(updateQuery, connection))
                    {
                        cmd.Parameters.AddWithValue("@first_name", txtFirstName.Text.Trim());
                        cmd.Parameters.AddWithValue("@last_name", txtLastName.Text.Trim());
                        cmd.Parameters.AddWithValue("@email", txtEmail.Text.Trim());
                        cmd.Parameters.AddWithValue("@phone", txtPhone.Text.Trim());
                        cmd.Parameters.AddWithValue("@hire_date", dtpHireDate.Value.Date);
                        cmd.Parameters.AddWithValue("@department", txtDepartment.Text.Trim());
                        cmd.Parameters.AddWithValue("@specialization", txtSpecialization.Text.Trim());
                        cmd.Parameters.AddWithValue("@status", cmbStatus.SelectedItem?.ToString() ?? "");
                        cmd.Parameters.AddWithValue("@id", selectedTeacherId);

                        int rows = cmd.ExecuteNonQuery();
                        MessageBox.Show(rows > 0 ? "Teacher updated successfully!" : "Update failed. Teacher not found.");
                    }
                }
                else
                {
                    // 1. Insert into user_login & get new user_id
                    string insertUserQuery = @"INSERT INTO user_login(username, password_hash, role_id) 
                           VALUES (@username, @password_hash, @role_id); 
                           SELECT CAST(SCOPE_IDENTITY() AS INT);";

                    int newUserId;
                    using (SqlCommand cmdUser = new SqlCommand(insertUserQuery, connection))
                    {
                        cmdUser.Parameters.AddWithValue("@username", txtFirstName.Text.Trim());
                        cmdUser.Parameters.AddWithValue("@password_hash", txtLastName.Text.Trim());
                        cmdUser.Parameters.AddWithValue("@role_id", 3); // Teacher role

                        newUserId = (int)cmdUser.ExecuteScalar();
                    }

                    // 2. Insert into teacher (teacher_id auto-generated by DB)
                    string insertTeacherQuery = @"INSERT INTO teacher 
                              (first_name, last_name, email, phone, hire_date, department, specialization, status, user_id) 
                              VALUES (@first_name, @last_name, @email, @phone, @hire_date, @department, @specialization, @status, @user_id)";

                    using (SqlCommand cmdTeacher = new SqlCommand(insertTeacherQuery, connection))
                    {
                        cmdTeacher.Parameters.AddWithValue("@first_name", txtFirstName.Text.Trim());
                        cmdTeacher.Parameters.AddWithValue("@last_name", txtLastName.Text.Trim());
                        cmdTeacher.Parameters.AddWithValue("@email", txtEmail.Text.Trim());
                        cmdTeacher.Parameters.AddWithValue("@phone", txtPhone.Text.Trim());
                        cmdTeacher.Parameters.AddWithValue("@hire_date", dtpHireDate.Value.Date);
                        cmdTeacher.Parameters.AddWithValue("@department", txtDepartment.Text.Trim());
                        cmdTeacher.Parameters.AddWithValue("@specialization", txtSpecialization.Text.Trim());
                        cmdTeacher.Parameters.AddWithValue("@status", cmbStatus.SelectedItem?.ToString() ?? "");
                        cmdTeacher.Parameters.AddWithValue("@user_id", newUserId);

                        cmdTeacher.ExecuteNonQuery();
                        MessageBox.Show("Teacher added successfully!", "Insert", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    }
                }

                // Reset form
                ClearFields();
                panelAddTeacher.Visible = false;
                isUpdateMode = false;
                selectedTeacherId = -1;

                // Reload teacher list
                LoadTeachers();
            }
        }

        private void btnCancel_Click(object sender, EventArgs e)
        {
            panelAddTeacher.Visible = false;

            txtFirstName.Clear();
            txtLastName.Clear();
            txtEmail.Clear();
            txtPhone.Clear();
            txtDepartment.Clear();
            txtSpecialization.Clear();
            cmbStatus.SelectedIndex = -1;
            dtpHireDate.Value = DateTime.Now;
        }

        private void btnUpdate_Click(object sender, EventArgs e)
        {
            if (dgvTeacher.SelectedRows.Count > 0)
            {
                // 1. Get selected teacher's ID
                selectedTeacherId = Convert.ToInt32(dgvTeacher.SelectedRows[0].Cells["teacher_id"].Value);

                // 2. Load data into form fields
                txtFirstName.Text = dgvTeacher.SelectedRows[0].Cells["first_name"].Value.ToString();
                txtLastName.Text = dgvTeacher.SelectedRows[0].Cells["last_name"].Value.ToString();
                txtEmail.Text = dgvTeacher.SelectedRows[0].Cells["email"].Value.ToString();
                txtPhone.Text = dgvTeacher.SelectedRows[0].Cells["phone"].Value.ToString();
                dtpHireDate.Value = Convert.ToDateTime(dgvTeacher.SelectedRows[0].Cells["hire_date"].Value);
                txtDepartment.Text = dgvTeacher.SelectedRows[0].Cells["department"].Value.ToString();
                txtSpecialization.Text = dgvTeacher.SelectedRows[0].Cells["specialization"].Value.ToString();
                cmbStatus.SelectedItem = dgvTeacher.SelectedRows[0].Cells["status"].Value.ToString();

                // 3. Enable update mode
                isUpdateMode = true;

                // 4. Show the panel
                panelAddTeacher.Visible = true;
                panelAddTeacher.BringToFront();
            }
            else
            {
                MessageBox.Show("Please select a teacher to update.", "Update", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }

        }
    }
}
